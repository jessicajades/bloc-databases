1. Write out a generic SELECT statement.
   SELECT column(s)
   FROM table(s)
   WHERE condition;

2. Create a funny way to remember the order of operations in a SELECT statement, such as a mnemonic.
   FROM - foxes
   WHERE - would
   GROUP BY - go
   HAVING - home
   SELECT - surely they're not
   ORDER BY - out
   LIMIT - late

3. Given this dogs table, write queries to select the following pieces of data:

   Display the name, gender, and age of all dogs that are part Labrador.
    SELECT name, gender, age
    FROM dogs
    WHERE breed LIKE '%labrador%';

   Display the ids of all dogs that are under 1 year old.
    SELECT id
    FROM dogs
    WHERE age < 1;

   Display the name and age of all dogs that are female and over 35lbs.
    SELECT name, age
    FROM dogs
    WHERE gender = 'F'
    AND weight > 35;

   Display all of the information about all dogs that are not Shepherd mixes.
    SELECT *
    FROM dogs
    WHERE breed NOT LIKE '%shepherd%';

   Display the id, age, weight, and breed of all dogs that are either over 60lbs or Great Danes.  
    SELECT id, age, weight, breed
    FROM dogs
    WHERE weight > 60
    OR breed LIKE '%great dane%';

4. Given this cats table, what records are returned from these queries?

   SELECT name, adoption_date FROM cats;
    | name     | adoption_date            |
    | -------- | ------------------------ |
    | Mushi    | 2016-03-22T00:00:00.000Z |
    | Seashell |                          |
    | Azul     | 2016-04-17T00:00:00.000Z |
    | Victoire | 2016-09-01T00:00:00.000Z |
    | Nala     |                          |

   SELECT name, age FROM cats;
    | name     | age |
    | -------- | --- |
    | Mushi    | 1   |
    | Seashell | 7   |
    | Azul     | 3   |
    | Victoire | 7   |
    | Nala     | 1   |

5. From the cats table, write queries to select the following pieces of data.

    Display all the information about all of the available cats.
        SELECT *
        FROM cats;

    Display the name and sex of all cats who are 7 years old.
        SELECT name, gender
        FROM cats
        WHERE age = 7;

    Find all of the names of the cats, so you don’t choose duplicate names for new cats.
        SELECT name
        FROM cats;

6. List each comparison operator and explain when you would use it. Include a real world example for each.
    < less than, find cats less than 5 years old 
    > greater than , find cats greater than 5 years old
    <= less than or equals to, find cats less than or equal to 5 years old
    >= greater than or equals to, find cats greater than or equal to 5 years old
    != not equals, find cats not equal to 10 years old
    = equals, find cats equal to 1 year old
    AND used to find data that matches multiple conditions, find thats that are female and less than 2 years old
    OR used to find data that matches either of multiple conditions, find female cats or cats that are less than 2 years old
    NOT used to find data that does not match the condition, find cats that are not greater than 10 years old

7. From the cats table, what data is returned from these queries?
    SELECT name FROM cats WHERE gender = ‘F’;
        Query Error: error: column "‘f’" does not exist

    SELECT name FROM cats WHERE age <> 3;
    | name     |
    | -------- |
    | Mushi    |
    | Seashell |
    | Victoire |
    | Nala     |

    SELECT ID FROM cats WHERE name != ‘Mushi’ AND gender = ‘M’;
        Query Error: error: column "‘mushi’" does not exist